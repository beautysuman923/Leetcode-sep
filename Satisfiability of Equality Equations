https://leetcode.com/problems/satisfiability-of-equality-equations/

class Solution {
public:
    
    vector<int>parent;
    vector<int>rank;
    
    int findParent(int node){
        
        if(parent[node]==node) return node;
        
        return parent[node]=findParent(parent[node]);
        
    }
    
    void unionIt(int x,int y){
        
        int p1=findParent(x);
        int p2=findParent(y);
        
        if(rank[p1] > rank[p2]) parent[p2]=p1;
        
        else if(rank[p1] < rank[p2]) parent[p1]=p2;
        
        else {
            parent[p1]=p2;
            rank[p2]++;  // increementing the parent rank
        }
        
    }
    
    bool equationsPossible(vector<string>& equations) {
        
        parent.resize(26);
        rank.resize(26);
        
        for(int i=0;i<26;i++) parent[i]=i,rank[i]=1;
        
        for(int i=0;i<equations.size();i++){
            
            if(equations[i][1]=='='){
                
                unionIt(equations[i][0]-'a',equations[i][3]-'a');
            }
        }
        
         for(int i=0;i<equations.size();i++){
            
            if(equations[i][1]=='!'){
                
                int p1=findParent(equations[i][0]-'a');
                int p2=findParent(equations[i][3]-'a');
                
                if(p1==p2) return false;
            }
        }
        
        return true;
    }
};
