https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/



class Solution {
public:
    
    vector<int> searchRange(vector<int>& nums, int target) {
      vector<int> ans;
        int size=nums.size();
        int l=0;
        int r=size-1;
        int res=-1;
        int first=-1,last=-1;
        while(l<=r){
            int mid=l+(r-l)/2;
            if(target==nums[mid]){
                 first=mid;
                 last=mid;
                r=mid-1;  
            }
            else if(target<nums[mid])
             r=mid-1;
            else
                l=mid+1;  
        }
        
         l=0;
         r=size-1;
         res=-1;
        while(l<=r){
            int mid=l+(r-l)/2;
            if(target==nums[mid]){
                 last=mid;
                l=mid+1;  
            }
            else if(target<nums[mid])
             r=mid-1;
            else
                l=mid+1;  
        }
        ans.push_back(first);
        ans.push_back(last);
        return ans;
    }
};
